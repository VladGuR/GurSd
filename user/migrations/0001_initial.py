# Generated by Django 2.0.5 on 2020-05-09 15:22

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import user.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=50, unique=True, validators=[user.models.UnicodeEmailValidator()], verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=15, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=15, verbose_name='Фамилия')),
                ('avatar', models.ImageField(blank=True, upload_to='users', verbose_name='Аватарка')),
                ('age', models.SmallIntegerField(blank=True, default=0, verbose_name='Возраст')),
                ('sex', models.TextField(blank=True, verbose_name='Пол')),
                ('nickname', models.TextField(max_length=128, verbose_name='Никнейм')),
                ('telephoneModel', models.TextField(max_length=50, verbose_name='Модель телефона')),
                ('aboutMyself', models.TextField(max_length=250, verbose_name='О себе')),
                ('contacts', models.TextField(max_length=150, verbose_name='Контакты')),
                ('networksAndSites', models.TextField(max_length=100, verbose_name='Соцсети и сайты')),
                ('favorites', models.TextField(max_length=100, verbose_name='Избранное')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserFriend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('friend', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Друг', to=settings.AUTH_USER_MODEL, verbose_name='Друг')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользаватель')),
            ],
        ),
    ]
